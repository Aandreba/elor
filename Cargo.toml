[package]
name = "elor"
description = "Base generic implementation of an Either type"
version = "1.1.1"
edition = "2021"
license = "MIT"
repository = "https://github.com/Aandreba/elor"
keywords = ["either", "eithers", "either-type", "either-types", "either-type"]
categories = ["data-structures", "rust-patterns", "no-std"]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
[features]
default = ["std"]
std = []
alloc = []
serialize = ["serde"]
random = ["rand"]
macro = ["proc-macro2", "syn", "quote"]
async = ["futures"]

[package.metadata.docs.rs]
features = ["serialize", "random", "macro", "async"]
rustdoc-args = ["--cfg", "docsrs"]

[dependencies]
cfg-if = "1"
futures = { version = "0.3", optional = true }
serde = { version = "1", features = ["derive"], optional = true }
rand = { version = "0.8", optional = true }
proc-macro2 = { version = "1", optional = true }
syn = { version = "1", optional = true, features = ["full"] }
quote = { version = "1", optional = true }

[dev-dependencies]
rand = "0.8.5"
tokio = { version = "1", features = ["full"] }
serde_json = "1"